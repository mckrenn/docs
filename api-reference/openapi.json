{
  "openapi": "3.1.0",
  "info": {
    "title": "GoHusky API",
    "description": "API da Husky, uma plataforma de logística para delivery e entregas. Aqui você encontra todas as informações necessárias para integrar o sistema Husky em seu aplicativo ou sistema.",
    "version": ""
  },
  "servers": [
    {
      "url": "https://sandbox.api.gohusky.net",
      "description": "Ambiente de Homologação, use para testes e desenvolvimento."
    },
    {
      "url": "https://api.gohusky.net",
      "description": "Ambiente de Produção, use para produção."
    }
  ],
  "components": {
    "schemas": {
      "EventEnum": {
        "type": "string",
        "enum": [
          "ORDER_STATUS_UPDATED",
          "FLEET_QUEUE",
          "ORDER_CREATED",
          "ORDER_UPDATED",
          "ORDER_DRIVER_UPDATED",
          "DRIVER_CREATED",
          "DRIVER_UPDATED",
          "DRIVER_STATUS_UPDATED",
          "CLIENT_CREATED",
          "CLIENT_UPDATED",
          "CLIENT_STATUS_UPDATED",
          "all"
        ],
        "example": "ORDER_STATUS_UPDATED",
        "description": "Tipo de evento para notificação. Para mais detalhes sobre os possíveis eventos, consulte a seção [Webhooks](#tag/Webhooks).\n<br>\nSe informado ```all```, todos os eventos que existem hoje (e futuros) serão notificados."
      },
      "DriverObject": {
        "type": "object",
        "properties": {
          "fleet": {
            "type": "object",
            "description": "Informações do entregador",
            "properties": {
              "id": {
                "type": "integer",
                "description": "ID do entregador",
                "example": 1209
              },
              "status": {
                "type": "integer",
                "description": "Status do entregador",
                "example": 1
              },
              "available": {
                "type": "integer",
                "description": "Indica se o entregador está disponível",
                "example": 1
              },
              "name": {
                "type": "string",
                "description": "Nome do entregador",
                "example": "John Doe"
              },
              "alias": {
                "type": "string",
                "description": "Apelido do entregador",
                "example": "john"
              },
              "email": {
                "type": "string",
                "description": "Email do entregador",
                "example": "john@example.com"
              },
              "photo": {
                "type": "string",
                "description": "Foto do entregador",
                "example": "https://example.com/photo.jpg"
              },
              "phone": {
                "type": "string",
                "description": "Telefone do entregador",
                "example": "1234567890"
              },
              "mobilePhone": {
                "type": "string",
                "description": "Celular do entregador",
                "example": "1234567890"
              },
              "signupDate": {
                "type": "string",
                "description": "Data de cadastro do entregador (em UTC)",
                "example": "2020-06-26 22:24:30"
              },
              "allocated": {
                "type": "object",
                "example": null
              }
            }
          },
          "vehicle": {
            "type": "object",
            "description": "Informações do veículo do entregador",
            "properties": {
              "type": {
                "type": "string",
                "description": "Tipo de veículo",
                "example": "0"
              },
              "plate": {
                "type": "string",
                "description": "Placa do veículo",
                "example": "ABC1234"
              },
              "speed": {
                "type": "string",
                "description": "Velocidade do veículo",
                "example": "0.42"
              },
              "capacity": {
                "type": "integer",
                "description": "Capacidade do veículo",
                "example": 5
              }
            }
          },
          "device": {
            "type": "object",
            "description": "Informações do dispositivo do entregador",
            "properties": {
              "battery": {
                "type": "integer",
                "description": "Bateria do dispositivo",
                "example": 0
              },
              "batteryDatetime": {
                "type": "string",
                "description": "Data e hora da bateria do dispositivo",
                "example": "2020-06-26 22:24:30"
              },
              "appVersion": {
                "type": "string",
                "description": "Versão do app do dispositivo",
                "example": "1.6.8"
              }
            }
          }
        }
      },
      "WebhookEvent": {
        "type": "object",
        "discriminator": {
          "propertyName": "event",
          "mapping": {
            "ORDER_CREATED": "#/components/schemas/EventOrderResourceCreatedOrUpdated",
            "ORDER_UPDATED": "#/components/schemas/EventOrderResourceCreatedOrUpdated",
            "ORDER_STATUS_UPDATED": "#/components/schemas/EventOrderResourceStatusUpdated",
            "ORDER_DRIVER_UPDATED": "#/components/schemas/EventOrderResourceDriverUpdated",
            "CLIENT_CREATED": "#/components/schemas/EventClientResourceCreatedOrUpdated",
            "CLIENT_UPDATED": "#/components/schemas/EventClientResourceCreatedOrUpdated",
            "CLIENT_STATUS_UPDATED": "#/components/schemas/EventClientResourceStatusUpdated",
            "DRIVER_CREATED": "#/components/schemas/EventDriverResourceCreatedOrUpdated",
            "DRIVER_UPDATED": "#/components/schemas/EventDriverResourceCreatedOrUpdated",
            "DRIVER_STATUS_UPDATED": "#/components/schemas/EventDriverResourceStatusUpdated",
            "FLEET_QUEUE": "#/components/schemas/EventFleetQueue"
          }
        },
        "properties": {
          "event": {
            "type": "string",
            "enum": [
              "ORDER_CREATED",
              "ORDER_UPDATED",
              "ORDER_STATUS_UPDATED",
              "ORDER_DRIVER_UPDATED",
              "CLIENT_CREATED",
              "CLIENT_UPDATED",
              "CLIENT_STATUS_UPDATED",
              "DRIVER_CREATED",
              "DRIVER_UPDATED",
              "DRIVER_STATUS_UPDATED",
              "FLEET_QUEUE"
            ]
          },
          "event_id": {
            "type": "string",
            "description": "ID do evento"
          },
          "date": {
            "type": "string",
            "description": "Data do evento (em UTC)",
            "example": "2020-06-26 22:24:30"
          }
        }
      },
      "EventOrderResourceCreatedOrUpdated": {
        "description": "Resource",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebhookEvent"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "event_context": {
                "type": "string",
                "description": "Token da operação",
                "example": "1234567890"
              },
              "customer": {
                "type": "string",
                "description": "Token do embarcador",
                "example": "1234567890"
              }
            }
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "resource": {
                "type": "object",
                "properties": {
                  "order": {
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "type": "object",
                        "properties": {
                          "pickup": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Nome do ponto de coleta",
                                "example": "BIM FILMES"
                              },
                              "phone": {
                                "type": "string",
                                "description": "Telefone do ponto de coleta",
                                "example": "1234567890"
                              },
                              "address": {
                                "type": "string",
                                "description": "Endereço do ponto de coleta",
                                "example": "Rua dos Andradas, 1155 - Centro Histórico, Porto Alegre - RS, Brasil"
                              },
                              "lat": {
                                "type": "number",
                                "description": "Latitude do ponto de coleta",
                                "example": -30.030161
                              },
                              "lng": {
                                "type": "number",
                                "description": "Longitude do ponto de coleta",
                                "example": -51.230108
                              },
                              "comp": {
                                "type": "string",
                                "description": "Complemento do ponto de coleta",
                                "example": "5858"
                              },
                              "neighborhood": {
                                "type": "string",
                                "description": "Bairro do ponto de coleta",
                                "example": "Centro Histórico"
                              },
                              "city": {
                                "type": "string",
                                "description": "Cidade do ponto de coleta",
                                "example": "Porto Alegre"
                              },
                              "state": {
                                "type": "string",
                                "description": "Estado do ponto de coleta",
                                "example": "RS"
                              },
                              "country": {
                                "type": "string",
                                "description": "País do ponto de coleta",
                                "example": "Brasil"
                              },
                              "obs": {
                                "type": "string",
                                "description": "Observações do ponto de coleta",
                                "example": "Observações adicionais"
                              }
                            }
                          },
                          "dropoff": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Nome do ponto de entrega",
                                "example": "BIM FILMES"
                              },
                              "phone": {
                                "type": "string",
                                "description": "Telefone do ponto de entrega",
                                "example": "1234567890"
                              },
                              "address": {
                                "type": "string",
                                "description": "Endereço do ponto de entrega",
                                "example": "Rua dos Andradas, 1155 - Centro Histórico, Porto Alegre - RS, Brasil"
                              },
                              "lat": {
                                "type": "number",
                                "description": "Latitude do ponto de entrega",
                                "example": -30.030161
                              },
                              "lng": {
                                "type": "number",
                                "description": "Longitude do ponto de entrega",
                                "example": -51.230108
                              },
                              "comp": {
                                "type": "string",
                                "description": "Complemento do ponto de entrega",
                                "example": "5858"
                              },
                              "neighborhood": {
                                "type": "string",
                                "description": "Bairro do ponto de entrega",
                                "example": "Centro Histórico"
                              },
                              "city": {
                                "type": "string",
                                "description": "Cidade do ponto de entrega",
                                "example": "Porto Alegre"
                              },
                              "state": {
                                "type": "string",
                                "description": "Estado do ponto de entrega",
                                "example": "RS"
                              },
                              "country": {
                                "type": "string",
                                "description": "País do ponto de entrega",
                                "example": "Brasil"
                              },
                              "obs": {
                                "type": "string",
                                "description": "Observações do ponto de entrega",
                                "example": "Observações adicionais"
                              }
                            }
                          },
                          "orderDetails": {
                            "type": "object",
                            "properties": {
                              "client": {
                                "type": "string",
                                "description": "Token da operação",
                                "example": "1234567890"
                              },
                              "subclient": {
                                "type": "string",
                                "description": "Token do embarcador",
                                "example": "1234567890"
                              },
                              "tracking": {
                                "type": "string",
                                "description": "Identificação da entrega",
                                "example": "051aa70b607f97beeba3f5f9ee2a6b984a9f1489c3a74d6083afc59e1685cb2a"
                              },
                              "number": {
                                "type": "integer",
                                "description": "Número da entrega",
                                "example": 1234567890
                              },
                              "cod": {
                                "type": "string",
                                "description": "Código da entrega",
                                "example": "1234567890"
                              },
                              "requester": {
                                "type": "string",
                                "description": "Requerente da entrega",
                                "example": "1234567890"
                              },
                              "size": {
                                "type": "integer",
                                "description": "Tamanho da entrega",
                                "example": 0
                              },
                              "status": {
                                "type": "integer",
                                "description": "Status da entrega",
                                "example": 1
                              },
                              "fleet": {
                                "type": "integer",
                                "description": "ID da frota",
                                "example": 1
                              },
                              "scheduled": {
                                "type": "integer",
                                "description": "ID do agendamento",
                                "example": 1
                              },
                              "sign": {
                                "type": "integer",
                                "description": "ID do signatário",
                                "example": 1
                              },
                              "signName": {
                                "type": "string",
                                "description": "Nome do signatário",
                                "example": "John Doe"
                              },
                              "signTime": {
                                "type": "string",
                                "description": "Data e hora do signatário",
                                "example": "2020-06-26 22:24:30"
                              },
                              "price": {
                                "type": "number",
                                "description": "Preço da entrega",
                                "example": 100
                              },
                              "waitingPrice": {
                                "type": "number",
                                "description": "Preço da entrega em espera",
                                "example": 100
                              },
                              "costCenter": {
                                "type": "integer",
                                "description": "ID do centro de custo",
                                "example": 1
                              },
                              "opObs": {
                                "type": "string",
                                "description": "Observações da operação",
                                "example": "Observações adicionais"
                              },
                              "optionalService": {
                                "type": "integer",
                                "description": "ID do serviço opcional",
                                "example": 1
                              },
                              "vehicle": {
                                "type": "integer",
                                "description": "ID do veículo",
                                "example": 1
                              },
                              "return": {
                                "type": "integer",
                                "description": "ID do retorno",
                                "example": 1
                              },
                              "paymentType": {
                                "type": "integer",
                                "description": "ID do tipo de pagamento",
                                "example": 1
                              },
                              "distance": {
                                "type": "number",
                                "description": "Distância da entrega",
                                "example": 100
                              },
                              "times": {
                                "type": "object",
                                "properties": {
                                  "created": {
                                    "type": "string",
                                    "description": "Data e hora da criação da entrega",
                                    "example": "2020-06-26 22:24:30"
                                  },
                                  "schedule": {
                                    "type": "string",
                                    "description": "Data e hora do agendamento da entrega",
                                    "example": "2020-06-26 22:24:30"
                                  },
                                  "pickup": {
                                    "type": "string",
                                    "description": "Data e hora da coleta da entrega",
                                    "example": "2020-06-26 22:24:30"
                                  },
                                  "started": {
                                    "type": "string",
                                    "description": "Data e hora do início da entrega",
                                    "example": "2020-06-26 22:24:30"
                                  },
                                  "dropoff": {
                                    "type": "string",
                                    "description": "Data e hora da entrega",
                                    "example": "2020-06-26 22:24:30"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "Data e hora da fechamento da entrega",
                                    "example": "2020-06-26 22:24:30"
                                  },
                                  "eta": {
                                    "type": "string",
                                    "description": "Data e hora da estimativa de entrega",
                                    "example": "2020-06-26 22:24:30"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "EventOrderResourceStatusUpdated": {
        "description": "Resource",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebhookEvent"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "event_context": {
                "type": "string",
                "description": "Token da operação",
                "example": "1234567890"
              },
              "customer": {
                "type": "string",
                "description": "Token do embarcador",
                "example": "1234567890"
              }
            }
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "resource": {
                "type": "object",
                "properties": {
                  "tracking_code": {
                    "type": "string",
                    "description": "Identificação da entrega",
                    "example": "051aa70b607f97beeba3f5f9ee2a6b984a9f1489c3a74d6083afc59e1685cb2a"
                  },
                  "old_status": {
                    "type": "string",
                    "description": "Status anterior da entrega",
                    "example": "Novo"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status da entrega",
                    "example": "Iniciado"
                  },
                  "trouble": {
                    "type": "boolean",
                    "description": "Indica se a entrega tem problema",
                    "example": false
                  },
                  "trouble_description": {
                    "type": "string",
                    "description": "Descrição do problema da entrega",
                    "example": "none"
                  },
                  "fleet_id": {
                    "type": "string",
                    "description": "ID do entregador",
                    "example": "1209"
                  }
                }
              }
            }
          }
        ]
      },
      "EventOrderResourceDriverUpdated": {
        "description": "Resource",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebhookEvent"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "event_context": {
                "type": "string",
                "description": "Token da operação",
                "example": "1234567890"
              },
              "customer": {
                "type": "string",
                "description": "Token do embarcador",
                "example": "1234567890"
              }
            }
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "resource": {
                "type": "object",
                "properties": {
                  "tracking_code": {
                    "type": "string",
                    "description": "Identificação da entrega",
                    "example": "051aa70b607f97beeba3f5f9ee2a6b984a9f1489c3a74d6083afc59e1685cb2a"
                  },
                  "old_driver": {
                    "type": "object",
                    "description": "Antigo entregador. ```Null``` se a entrega estava sem entregador.",
                    "example": null
                  },
                  "new_driver": {
                    "$ref": "#/components/schemas/DriverObject",
                    "description": "Novo entregador. ```Null``` se a entrega foi desassociada do antigo entregador."
                  }
                }
              }
            }
          }
        ]
      },
      "EventClientResourceCreatedOrUpdated": {
        "description": "Resource",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebhookEvent"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "event_context": {
                "type": "string",
                "description": "Token da operação",
                "example": "1234567890"
              }
            }
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "resource": {
                "type": "object",
                "properties": {
                  "client": {
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string",
                        "description": "Token do cliente",
                        "example": "1234567890"
                      },
                      "name": {
                        "type": "string",
                        "description": "Nome do cliente",
                        "example": "John Doe"
                      },
                      "razaoSocial": {
                        "type": "string",
                        "description": "Razão social do cliente",
                        "example": "John Doe"
                      },
                      "personType": {
                        "type": "string",
                        "description": "Tipo de pessoa do cliente",
                        "example": "Pessoa física"
                      },
                      "cpf": {
                        "type": "string",
                        "description": "CPF do cliente",
                        "example": "1234567890"
                      },
                      "cnpj": {
                        "type": "string",
                        "description": "CNPJ do cliente",
                        "example": "1234567890"
                      },
                      "incricaoEstadual": {
                        "type": "string",
                        "description": "Inscrição estadual do cliente",
                        "example": ""
                      },
                      "incricaoMunicipal": {
                        "type": "string",
                        "description": "Inscrição municipal do cliente",
                        "example": ""
                      },
                      "address": {
                        "type": "string",
                        "description": "Endereço do cliente",
                        "example": "Rua Riachuelo 269"
                      },
                      "complement": {
                        "type": "string",
                        "description": "Complemento do endereço do cliente",
                        "example": "301"
                      },
                      "lat": {
                        "type": "string",
                        "description": "Latitude do endereço do cliente",
                        "example": "-16.0791420"
                      },
                      "lng": {
                        "type": "string",
                        "description": "Longitude do endereço do cliente",
                        "example": "-49.8565280"
                      },
                      "neighborhood": {
                        "type": "string",
                        "description": "Bairro do endereço do cliente",
                        "example": "Centro"
                      },
                      "zipCode": {
                        "type": "string",
                        "description": "CEP do endereço do cliente",
                        "example": "90417-815"
                      },
                      "city": {
                        "type": "string",
                        "description": "Cidade do endereço do cliente",
                        "example": "Porto Alegre"
                      },
                      "state": {
                        "type": "string",
                        "description": "Estado do endereço do cliente",
                        "example": "RS"
                      },
                      "country": {
                        "type": "string",
                        "description": "País do endereço do cliente",
                        "example": "Brasil"
                      },
                      "contactName": {
                        "type": "string",
                        "description": "Nome do contato do cliente",
                        "example": "John Doe"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Telefone do cliente",
                        "example": "1234567890"
                      },
                      "mobilePhone": {
                        "type": "string",
                        "description": "Celular do cliente",
                        "example": "1234567890"
                      },
                      "email": {
                        "type": "string",
                        "description": "Email do cliente",
                        "example": "john@example.com"
                      },
                      "status": {
                        "type": "integer",
                        "description": "Status do cliente",
                        "example": 1
                      },
                      "signupDate": {
                        "type": "string",
                        "description": "Data de cadastro do cliente (em UTC)",
                        "example": "2020-06-26 22:24:30"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "EventClientResourceStatusUpdated": {
        "description": "Resource",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventClientResourceCreatedOrUpdated"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "resource": {
                "type": "object",
                "properties": {
                  "new_status": {
                    "type": "string",
                    "description": "Status do cliente",
                    "example": "INACTIVE"
                  }
                }
              }
            }
          }
        ]
      },
      "EventDriverResourceCreatedOrUpdated": {
        "description": "Resource",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebhookEvent"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "event_context": {
                "type": "string",
                "description": "Token da operação",
                "example": "1234567890"
              }
            }
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "resource": {
                "type": "object",
                "properties": {
                  "driver": {
                    "$ref": "#/components/schemas/DriverObject",
                    "description": "Entregador"
                  }
                }
              }
            }
          }
        ]
      },
      "EventDriverResourceStatusUpdated": {
        "description": "Resource",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventDriverResourceCreatedOrUpdated"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "resource": {
                "type": "object",
                "properties": {
                  "new_status": {
                    "type": "string",
                    "description": "Status do entregador",
                    "example": "INACTIVE"
                  }
                }
              }
            }
          }
        ]
      },
      "EventFleetQueue": {
        "description": "Resource",
        "allOf": [
          {
            "$ref": "#/components/schemas/WebhookEvent"
          },
          {
            "type": "object"
          },
          {
            "properties": {
              "resource": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Status da fila do embarcador",
                    "example": "left"
                  },
                  "fleet_id": {
                    "type": "integer",
                    "description": "ID do embarcador",
                    "example": 1209
                  },
                  "fleet_name": {
                    "type": "string",
                    "description": "Nome do embarcador",
                    "example": "Embarcador Teste"
                  },
                  "orders_count": {
                    "type": "integer",
                    "description": "Quantidade de entregas na fila do embarcador",
                    "example": 10
                  },
                  "tracking_codes": {
                    "type": "array",
                    "description": "Identificações das entregas na fila do embarcador",
                    "example": [
                      "051aa70b607f97beeba3f5f9ee2a6b984a9f1489c3a74d6083afc59e1685cb2a",
                      "051aa70b607f97beeba3f5f9ee2a6b984a9f1489c3a74d6083afc59e1685cb2b"
                    ]
                  }
                }
              }
            }
          }
        ]
      }
    },
    "parameters": {
      "live_mode": {
        "name": "live_mode",
        "in": "query",
        "description": "Especifica o ambiente para executar a requisição.",
        "required": true,
        "schema": {
          "type": "boolean"
        }
      },
      "customer": {
        "name": "customer",
        "in": "query",
        "required": true,
        "schema": {
          "type": "boolean"
        },
        "description": "Define o tipo de autenticação: \n`true` = Embarcador (Restaurante, Loja, Farmácia) \n`false` = Operação (Operador Logístico)"
      }
    },
    "securitySchemes": {
      "TokenQuery": {
        "type": "apiKey",
        "description": "Token de autenticação via query parameter. Pode representar o ID público da operação (Operador Logístico) ou o ID público do embarcador (Restaurante, loja, farmácia).",
        "name": "token",
        "in": "query"
      },
      "CustomerQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "customer",
        "description": "Define qual tipo de token está sendo utilizado."
      },
      "TokenHeader": {
        "type": "apiKey",
        "description": "Token de autenticação via header. Utilizado exclusivamente para endpoints v2. Deve ser o token do embarcador.",
        "name": "Token",
        "in": "header"
      }
    },
    "responses": {
      "401": {
        "description": "Token inválido ou não autorizado",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "integer",
                  "example": 0
                },
                "message": {
                  "type": "string",
                  "example": "Token inválido ou não autorizado"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Token não informado corretamente",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "integer",
                  "example": 0
                },
                "message": {
                  "type": "string",
                  "example": "Token não informado corretamente"
                }
              }
            }
          }
        }
      },
      "405": {
        "description": "Método não permitido",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "integer",
                  "example": 0
                },
                "message": {
                  "type": "string",
                  "example": "Método não permitido, consulte a documentação."
                }
              }
            }
          }
        }
      }
    }
  },
  "paths": {
    "/checkOrderPrice": {
      "post": {
        "operationId": "checkOrderPrice",
        "tags": [
          "Entregas"
        ],
        "summary": "Cotação de entrega",
        "description": "Solicita a cotação de uma entrega. Retorna o valor e distância da entrega.\n<br><br>\n**Rate Limit:** 100 requisições por minuto.",
        "parameters": [
          {
            "$ref": "#/components/parameters/live_mode"
          },
          {
            "$ref": "#/components/parameters/customer"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "token",
                  "geocoding",
                  "return",
                  "destiny"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Token do embarcador",
                    "example": "4156165165165165165165165165165165165165165165165165165165165165"
                  },
                  "geocoding": {
                    "type": "boolean",
                    "description": "Define se a API deve geocodificar automaticamente o endereço informado",
                    "example": true
                  },
                  "return": {
                    "description": "Define se a entrega terá retorno para a origem. \n<br>\ntrue = Retorno para a origem\n<br>\nfalse = Não tem retorno para a origem",
                    "type": "boolean",
                    "example": true
                  },
                  "pickup": {
                    "type": "object",
                    "description": "(Opcional) Ponto de coleta da entrega. Caso não seja informado, será usado o endereço cadastrado em nosso sistema para o embarcador.",
                    "required": [
                      "address",
                      "lat",
                      "lng",
                      "streetNumber",
                      "neighborhood",
                      "city",
                      "state",
                      "country"
                    ],
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "Endereço de coleta",
                        "example": "Francisco Cabeda"
                      },
                      "lat": {
                        "type": "number",
                        "description": "Latitude do endereço de coleta",
                        "format": "float",
                        "example": -30
                      },
                      "lng": {
                        "type": "number",
                        "description": "Longitude do endereço de coleta",
                        "format": "float",
                        "example": -50
                      },
                      "streetNumber": {
                        "type": "string",
                        "description": "Número do endereço de coleta",
                        "example": "81"
                      },
                      "neighborhood": {
                        "type": "string",
                        "description": "Bairro do endereço de coleta",
                        "example": "Centro"
                      },
                      "city": {
                        "type": "string",
                        "description": "Cidade do endereço de coleta",
                        "example": "Santana do Livramento"
                      },
                      "state": {
                        "type": "string",
                        "description": "Estado do endereço de coleta",
                        "example": "RS"
                      },
                      "country": {
                        "type": "string",
                        "description": "País do endereço de coleta",
                        "example": "BR"
                      }
                    }
                  },
                  "destiny": {
                    "description": "Ponto de entrega",
                    "required": [
                      "address",
                      "lat",
                      "lng",
                      "streetNumber",
                      "neighborhood",
                      "city",
                      "state",
                      "country"
                    ],
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "Endereço de entrega",
                        "example": "Francisco Cabeda"
                      },
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Latitude do endereço de entrega",
                        "example": -30
                      },
                      "lng": {
                        "type": "number",
                        "description": "Longitude do endereço de entrega",
                        "format": "float",
                        "example": -50
                      },
                      "streetNumber": {
                        "type": "string",
                        "description": "Número do endereço de entrega",
                        "example": "81"
                      },
                      "neighborhood": {
                        "type": "string",
                        "description": "Bairro do endereço de entrega",
                        "example": "Centro"
                      },
                      "city": {
                        "type": "string",
                        "description": "Cidade do endereço de entrega",
                        "example": "Santana do Livramento"
                      },
                      "state": {
                        "type": "string",
                        "description": "Estado do endereço de entrega",
                        "example": "RS"
                      },
                      "country": {
                        "type": "string",
                        "description": "País do endereço de entrega",
                        "example": "BR"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cotação realizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "price": {
                      "type": "string",
                      "description": "Valor da entrega",
                      "example": "28.30"
                    },
                    "distance": {
                      "type": "number",
                      "description": "Distância da entrega",
                      "example": 10.123
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Erro na cotação"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          }
        },
        "security": [
          {
            "TokenQuery": []
          }
        ]
      }
    },
    "/createOrderList": {
      "post": {
        "operationId": "createOrdersList",
        "tags": [
          "Entregas"
        ],
        "summary": "Criação de entrega",
        "description": "Cria uma entrega no sistema. Pode ser uma entrega individual ou múltiplas entregas em lote.",
        "parameters": [
          {
            "$ref": "#/components/parameters/live_mode"
          },
          {
            "$ref": "#/components/parameters/customer"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "required": [
                    "specifications",
                    "addresses"
                  ],
                  "properties": {
                    "specifications": {
                      "description": "Especificações da entrega",
                      "required": [
                        "origin",
                        "return",
                        "geocoding",
                        "orderId",
                        "token",
                        "package"
                      ],
                      "properties": {
                        "origin": {
                          "type": "string",
                          "description": "Identificação da origem da entrega (ex.: Nome PDV, Televendas, etc.)",
                          "example": "NomeDoSeuSistema"
                        },
                        "return": {
                          "type": "boolean",
                          "description": "Indica se a entrega terá retorno para a origem",
                          "example": false
                        },
                        "geocoding": {
                          "type": "boolean",
                          "description": "Define se a API deve geocodificar automaticamente o endereço informado",
                          "example": false
                        },
                        "orderId": {
                          "type": "string",
                          "description": "Número de identificação da entrega em um sistema externo",
                          "example": "01"
                        },
                        "token": {
                          "type": "string",
                          "description": "Token da Embarcador/loja relacionado à entrega",
                          "example": "Token-Loja/embarcador/Restaurante"
                        },
                        "startDate": {
                          "type": "string",
                          "description": "Data e hora em que o serviço deve ser realizado (fuso horário UTC)",
                          "format": "datetime",
                          "example": "02/01/2006 15:04:05"
                        },
                        "package": {
                          "type": "object",
                          "description": "Informações do pacote da entrega",
                          "properties": {
                            "size": {
                              "type": "string",
                              "description": "Tamanho do pacote da entrega",
                              "example": "0"
                            }
                          }
                        },
                        "ifood_reference": {
                          "type": "string",
                          "description": "Se for uma entrega para um pedido do iFood, informe o código localizador do pedido iFood",
                          "example": "12345678"
                        }
                      }
                    },
                    "addresses": {
                      "description": "Pontos da entrega (Ponto de entrega e Ponto de coleta)",
                      "type": "object",
                      "required": [
                        "dropoff"
                      ],
                      "properties": {
                        "dropoff": {
                          "description": "Ponto de entrega",
                          "required": [
                            "name",
                            "phone",
                            "address",
                            "streetNumber",
                            "neighborhood",
                            "city",
                            "state",
                            "country",
                            "lat",
                            "lng",
                            "payment"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Nome do destinatário",
                              "example": "Francisco"
                            },
                            "phone": {
                              "type": "string",
                              "description": "Telefone do destinatário",
                              "example": "00000000000"
                            },
                            "address": {
                              "type": "string",
                              "description": "Endereço completo de entrega",
                              "example": "R. Xavier Curado"
                            },
                            "streetNumber": {
                              "type": "string",
                              "description": "Número do endereço de entrega",
                              "example": "25"
                            },
                            "comp": {
                              "type": "string",
                              "description": "Complemento do endereço de entrega",
                              "example": "apto"
                            },
                            "neighborhood": {
                              "type": "string",
                              "description": "Bairro do endereço de entrega",
                              "example": "Ipiranga"
                            },
                            "city": {
                              "type": "string",
                              "description": "Cidade do endereço de entrega",
                              "example": "São Paulo"
                            },
                            "state": {
                              "type": "string",
                              "description": "Estado do endereço de entrega",
                              "example": "São paulo"
                            },
                            "country": {
                              "type": "string",
                              "description": "País do endereço de entrega",
                              "example": "Brasil"
                            },
                            "obs": {
                              "type": "string",
                              "description": "Observações adicionais do endereço de entrega",
                              "example": "Observações adicionais"
                            },
                            "lat": {
                              "type": "string",
                              "description": "Latitude do endereço de entrega",
                              "example": "-23.584644"
                            },
                            "lng": {
                              "type": "string",
                              "description": "Longitude do endereço de entrega",
                              "example": "-46.608366"
                            },
                            "useSavedAddress": {
                              "type": "boolean",
                              "description": "Indica se deve ser usado o endereço salvo na base de contatos para o destinatário. \\\n`true` = Ignora o endereço informado e usa o endereço salvo na base de contatos. Se não houver endereço salvo, será usado o endereço informado. \\\n`false` = Usa o endereço informado",
                              "example": false
                            },
                            "payment": {
                              "required": [
                                "method",
                                "value"
                              ],
                              "properties": {
                                "method": {
                                  "description": "Método de pagamento",
                                  "enum": [
                                    "ONLINE",
                                    "CASH",
                                    "TERMINAL"
                                  ],
                                  "example": "ONLINE"
                                },
                                "value": {
                                  "description": "Valor do pagamento",
                                  "type": "number",
                                  "example": 100
                                }
                              }
                            }
                          }
                        },
                        "pickup": {
                          "description": "(Opcional) Ponto de coleta. Se não for enviado, será usado o endereço cadastrado em nosso sistema para a loja.",
                          "required": [
                            "name",
                            "phone",
                            "address",
                            "streetNumber",
                            "neighborhood",
                            "city",
                            "state",
                            "country",
                            "obs",
                            "geocoding",
                            "lat",
                            "lng"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Nome do remetente",
                              "example": "Nome do remetente"
                            },
                            "phone": {
                              "type": "string",
                              "description": "Telefone do remetente",
                              "example": "00000000000"
                            },
                            "address": {
                              "type": "string",
                              "description": "Endereço de coleta",
                              "example": "Endereço de coleta"
                            },
                            "streetNumber": {
                              "type": "string",
                              "description": "Número do endereço de coleta",
                              "example": "123"
                            },
                            "neighborhood": {
                              "type": "string",
                              "description": "Bairro do endereço de coleta",
                              "example": "Centro"
                            },
                            "city": {
                              "type": "string",
                              "description": "Cidade do endereço de coleta",
                              "example": "São Paulo"
                            },
                            "state": {
                              "type": "string",
                              "description": "Estado do endereço de coleta",
                              "example": "SP"
                            },
                            "country": {
                              "type": "string",
                              "description": "País do endereço de coleta",
                              "example": "Brasil"
                            },
                            "obs": {
                              "type": "string",
                              "description": "Observações do endereço de coleta",
                              "example": "Observações"
                            },
                            "geocoding": {
                              "type": "boolean",
                              "description": "Define se a API deve geocodificar automaticamente o endereço informado",
                              "example": true
                            },
                            "lat": {
                              "type": "string",
                              "description": "Latitude do endereço de coleta",
                              "example": "-23.584644"
                            },
                            "lng": {
                              "type": "string",
                              "description": "Longitude do endereço de coleta",
                              "example": "-46.608366"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Requisição processada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "success": {
                        "description": "Qualquer valor diferente de 1 indica que ocorreu um erro na criação da entrega. Em caso de erro, valide o campo message para mais detalhes.",
                        "type": "integer",
                        "example": 1
                      },
                      "message": {
                        "description": "Mensagem de retorno da solicitação",
                        "type": "string",
                        "example": "Solicitação recebida com sucesso!"
                      },
                      "tracking": {
                        "description": "Identificador da entrega",
                        "type": "string",
                        "example": "6b0187ae9bb6a5cb809308508133d32e83c5efe0e9fb297fea8283505a3b23dc"
                      },
                      "orderId": {
                        "description": "Número da entrega na operação",
                        "type": "string",
                        "example": "123"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "success": {
                        "type": "integer",
                        "example": 0
                      },
                      "message": {
                        "type": "string",
                        "example": "Verifique o payload da request."
                      }
                    },
                    "type": "object"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          }
        },
        "security": [
          {
            "TokenQuery": []
          }
        ]
      }
    },
    "/createStore": {
      "post": {
        "operationId": "createStore",
        "tags": [
          "Embarcadores"
        ],
        "summary": "Criação de embarcador",
        "description": "Cria um embarcador no sistema.",
        "parameters": [
          {
            "$ref": "#/components/parameters/live_mode"
          },
          {
            "$ref": "#/components/parameters/customer"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "basicInfo",
                  "address"
                ],
                "properties": {
                  "basicInfo": {
                    "description": "Informações básicas do embarcador",
                    "required": [
                      "name",
                      "phone",
                      "user",
                      "pass",
                      "label",
                      "active"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Nome do embarcador",
                        "example": "Embarcador Teste"
                      },
                      "phone": {
                        "type": "string",
                        "description": "Telefone do embarcador",
                        "example": "51323366656"
                      },
                      "user": {
                        "type": "string",
                        "format": "email",
                        "description": "E-mail do embarcador",
                        "example": "loja.1tes3t2e@lojateste.com"
                      },
                      "pass": {
                        "type": "string",
                        "description": "Senha do embarcador",
                        "example": "1234"
                      },
                      "label": {
                        "type": "string",
                        "description": "Label do embarcador",
                        "example": "Teste"
                      },
                      "active": {
                        "type": "boolean",
                        "description": "Define se o embarcador está ativo",
                        "example": true
                      }
                    },
                    "type": "object"
                  },
                  "address": {
                    "description": "Endereço do embarcador",
                    "required": [
                      "street",
                      "comp",
                      "lat",
                      "lng",
                      "neighborhood",
                      "city",
                      "state",
                      "country"
                    ],
                    "properties": {
                      "street": {
                        "type": "string",
                        "description": "Endereço do embarcador",
                        "example": "Rua dos Andradas, 1234"
                      },
                      "comp": {
                        "type": "string",
                        "description": "Complemento do endereço do embarcador",
                        "example": "Sala 1201"
                      },
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Latitude do endereço do embarcador",
                        "example": -45.4648
                      },
                      "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "Longitude do endereço do embarcador",
                        "example": -45.5468
                      },
                      "neighborhood": {
                        "type": "string",
                        "description": "Bairro do endereço do embarcador",
                        "example": "Centro Histórico"
                      },
                      "city": {
                        "type": "string",
                        "description": "Cidade do endereço do embarcador",
                        "example": "Porto Alegre"
                      },
                      "state": {
                        "type": "string",
                        "description": "Estado do endereço do embarcador",
                        "example": "Rio Grande do Sul"
                      },
                      "country": {
                        "type": "string",
                        "description": "País do endereço do embarcador",
                        "example": "Brasil"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Requisição processada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "integer",
                      "description": "Qualquer valor diferente de 1 indica que ocorreu um erro na criação do embarcador. Em caso de erro, valide o campo message para mais detalhes.",
                      "example": 1
                    },
                    "message": {
                      "type": "string",
                      "description": "Mensagem de retorno da solicitação",
                      "example": "Solicitação recebida com sucesso!"
                    },
                    "token": {
                      "type": "string",
                      "description": "Token do embarcador criado",
                      "example": "4156165165165165165165165165165165165165165165165165165165165165"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro ao criar embarcador",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Código do erro",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "description": "Mensagem de erro",
                      "example": "É necessário informar nome do embarcador para cadastro."
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          }
        },
        "security": [
          {
            "TokenQuery": []
          }
        ]
      }
    },
    "/getFleetDetails": {
      "get": {
        "operationId": "getFleetDetails",
        "tags": [
          "Entregadores"
        ],
        "summary": "Informações de entregador",
        "description": "Obtém informações de um entregador com base no seu ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/live_mode"
          },
          {
            "$ref": "#/components/parameters/customer"
          },
          {
            "name": "fleetId",
            "in": "query",
            "description": "Identificador do entregador",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Informações do entregador obtidas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "fleet_driver": {
                        "type": "string",
                        "description": "Nome do entregador",
                        "example": "João da Silva"
                      },
                      "fleet_alias": {
                        "type": "string",
                        "description": "Apelido do entregador",
                        "example": "joão"
                      },
                      "fleet_photo": {
                        "type": "string",
                        "example": "https://gohusky.s3.sa-east-1.amazonaws.com/389d0e3ff95784714a04fd93c4bf14db78e39dcf6a96655270bff5fa541df08e.png"
                      },
                      "fleet_plate": {
                        "type": "string",
                        "description": "Placa do entregador",
                        "example": ""
                      },
                      "fleet_cel": {
                        "type": "string",
                        "description": "Celular do entregador",
                        "example": "51996766591"
                      },
                      "fleet_app_version": {
                        "type": "string",
                        "description": "Versão do app do entregador",
                        "example": "1.6.8"
                      },
                      "fleet_rg": {
                        "type": "string",
                        "description": "RG do entregador",
                        "example": ""
                      },
                      "fleet_cpf": {
                        "type": "string",
                        "description": "CPF do entregador",
                        "example": ""
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ID do entregador não informado"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          }
        },
        "security": [
          {
            "TokenQuery": []
          }
        ]
      }
    },
    "/importKML": {
      "post": {
        "operationId": "importKML",
        "tags": [
          "Embarcadores"
        ],
        "summary": "Importação de KML",
        "description": "Importa um KML para o embarcador.",
        "parameters": [
          {
            "$ref": "#/components/parameters/live_mode"
          },
          {
            "$ref": "#/components/parameters/customer"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "kml": {
                    "description": "Arquivo KML para importação",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "KML importado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "integer",
                      "description": "Qualquer valor diferente de 1 indica que ocorreu um erro na importação do KML. Em caso de erro, valide o campo message para mais detalhes.",
                      "example": 1
                    },
                    "message": {
                      "type": "string",
                      "description": "Mensagem de retorno da solicitação",
                      "example": "KML importado com sucesso!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro ao importar KML",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "integer",
                      "description": "Código de erro",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "Mensagem de erro",
                      "example": "O arquivo enviado não é um KML"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          }
        },
        "security": [
          {
            "TokenQuery": []
          }
        ]
      }
    },
    "/nearestStore": {
      "post": {
        "operationId": "nearestStore",
        "tags": [
          "Embarcadores"
        ],
        "summary": "Localização de embarcador",
        "description": "Busca os embarcadores que atendem a uma determinada localização baseada nas coordenadas (latitude e longitude) informadas.",
        "parameters": [
          {
            "$ref": "#/components/parameters/live_mode"
          },
          {
            "$ref": "#/components/parameters/customer"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "orderInfo"
                ],
                "properties": {
                  "orderInfo": {
                    "type": "object",
                    "required": [
                      "lat",
                      "lng"
                    ],
                    "properties": {
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Coordenada latitude do endereço de entrega",
                        "example": -30.029819
                      },
                      "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "Coordenada longitude do endereço de entrega",
                        "example": -51.229321
                      },
                      "label": {
                        "type": "string",
                        "description": "Categoria do embarcador",
                        "example": "Label opcional"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Embarcadores encontrados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalDistance": {
                      "description": "Distância do embarcador em metros",
                      "type": "number"
                    },
                    "area": {
                      "description": "Nome da zona onde o embarcador está",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro ao localizar embarcador",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "description": "Código de status do erro",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "Mensagem de retorno do erro",
                      "example": "O campo \"lat\" não foi informado"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          }
        },
        "security": [
          {
            "TokenQuery": []
          }
        ]
      }
    },
    "/notifications": {
      "get": {
        "operationId": "listNotifications",
        "tags": [
          "Notificações"
        ],
        "summary": "Lista de webhooks",
        "description": "Recupera uma lista de webhooks do usuário autenticado.",
        "parameters": [
          {
            "$ref": "#/components/parameters/live_mode"
          },
          {
            "$ref": "#/components/parameters/customer"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de notificações obtida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID da notificação",
                        "example": "NTF-5e42e2b9f3645"
                      },
                      "event": {
                        "description": "Tipo de evento",
                        "$ref": "#/components/schemas/EventEnum"
                      },
                      "url": {
                        "type": "string",
                        "description": "URL para receber as notificações",
                        "example": "https://www.seusite.com.br/url"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          }
        },
        "security": [
          {
            "TokenQuery": []
          }
        ]
      },
      "post": {
        "operationId": "createNotification",
        "tags": [
          "Notificações"
        ],
        "summary": "Criar Webhook",
        "description": "Cria um webhook para receber notificações em tempo real sobre eventos do sistema.",
        "parameters": [
          {
            "$ref": "#/components/parameters/live_mode"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "event",
                  "url"
                ],
                "properties": {
                  "event": {
                    "description": "Tipo de evento para notificar por webhook",
                    "$ref": "#/components/schemas/EventEnum"
                  },
                  "url": {
                    "description": "URL para receber as notificações por webhook",
                    "type": "string",
                    "example": "https://www.seusite.com.br/url"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notificação cadastrada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "ID da notificação",
                        "example": "NTF-5e42e35a958f0"
                      },
                      "event": {
                        "description": "Tipo de evento cadastrado",
                        "$ref": "#/components/schemas/EventEnum"
                      },
                      "url": {
                        "type": "string",
                        "description": "URL para receber as notificações",
                        "example": "https://www.seusite.com.br/url"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro ao cadastrar notificação"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          }
        },
        "security": [
          {
            "TokenQuery": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteNotification",
        "tags": [
          "Notificações"
        ],
        "summary": "Deletar Webhook",
        "description": "Deleta um webhook existente.",
        "parameters": [
          {
            "$ref": "#/components/parameters/live_mode"
          },
          {
            "name": "notification",
            "in": "query",
            "description": "ID do webhook a ser deletado",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook deletado com sucesso"
          },
          "400": {
            "description": "ID do webhook não informado"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Webhook não encontrado"
          },
          "405": {
            "$ref": "#/components/responses/405"
          }
        },
        "security": [
          {
            "TokenQuery": []
          }
        ]
      }
    },
    "/orderReady": {
      "post": {
        "operationId": "orderReady",
        "tags": [
          "Entregas"
        ],
        "summary": "Pedido Pronto",
        "description": "Informa que o pedido já está pronto para ser coletado pelo entregador.",
        "parameters": [
          {
            "$ref": "#/components/parameters/live_mode"
          },
          {
            "$ref": "#/components/parameters/customer"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "tracking",
                  "ready"
                ],
                "properties": {
                  "tracking": {
                    "description": "Identificador da entrega (tracking code)",
                    "type": "string",
                    "example": "051aa70b607f97beeba3f5f9ee2a6b984a9f1489c3a74d6083afc59e1685cb2a"
                  },
                  "ready": {
                    "description": "Define se a entrega está pronta para ser coletada pelo entregador.\n<br>\ntrue = Entrega pronta\n<br>\nfalse = Entrega não pronta",
                    "type": "boolean",
                    "example": true
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entrega atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Entrega atualizada com sucesso!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao atualizar entrega",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Erro ao atualizar entrega"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          }
        },
        "security": [
          {
            "TokenQuery": []
          }
        ]
      }
    },
    "/unfinishedStatusReasons": {
      "get": {
        "operationId": "unfinishedStatusReasons",
        "tags": [
          "Entregas"
        ],
        "summary": "Motivos de Status Não Finalizado",
        "description": "Obtém os motivos disponíveis para alterar uma entrega para o status \"Não Finalizado\".",
        "parameters": [
          {
            "$ref": "#/components/parameters/live_mode"
          },
          {
            "$ref": "#/components/parameters/customer"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de motivos obtida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "description": "Código do motivo",
                        "example": 1
                      },
                      "name": {
                        "type": "string",
                        "description": "Motivo de não finalização",
                        "example": "Cliente não encontrado"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          }
        },
        "security": [
          {
            "TokenQuery": []
          }
        ]
      }
    },
    "/updateOrderStatus": {
      "post": {
        "operationId": "updateOrderStatus",
        "tags": [
          "Entregas"
        ],
        "summary": "Alteração de Status",
        "description": "Altera o status de uma entrega já existente.\n<br><br>\n**Referências de status (ID - STATUS):**\n> `1` - Novo \\\n> `2` - Iniciado \\\n> `3` - Coletando \\\n> `4` - Entregando \\\n> `5` - No Cliente \\\n> `6` - Retornando \\\n> `7` - Finalizado \\\n> `8` - Cancelado \\\n> `9` - Não Finalizado",
        "parameters": [
          {
            "$ref": "#/components/parameters/live_mode"
          },
          {
            "$ref": "#/components/parameters/customer"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "tracking",
                  "status"
                ],
                "properties": {
                  "tracking": {
                    "description": "Código de identificação da entrega",
                    "type": "string",
                    "example": "TRACKING_CODE"
                  },
                  "status": {
                    "description": "ID do status para alteração",
                    "type": "integer",
                    "example": 2
                  },
                  "reason": {
                    "description": "Código do motivo de não finalização (obrigatório para status 9). Consulte [/unfinishedStatusReasons](#/unfinishedStatusReasons) para obter a lista de motivos disponíveis.",
                    "type": "integer",
                    "example": 1
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status alterado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "integer",
                      "description": "Código de status da resposta. 1 = Sucesso",
                      "example": 1
                    },
                    "message": {
                      "type": "string",
                      "description": "Mensagem de retorno da solicitação",
                      "example": "Status Atualizado!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao alterar status",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "integer",
                      "description": "Código de erro",
                      "example": 1
                    },
                    "message": {
                      "type": "string",
                      "description": "Mensagem de erro",
                      "example": "O tracking da entrega é inválido, ele deve ser alfanumérico com 64 caracteres"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          }
        },
        "security": [
          {
            "TokenQuery": []
          }
        ]
      }
    },
    "/v2/getOrderStatus": {
      "post": {
        "operationId": "v2/getOrderStatus",
        "tags": [
          "Entregas"
        ],
        "summary": "Consulta de Status da entrega",
        "description": "Este endpoint recebe via POST um campo tracking_codes com um array de tracking de entregas e retorna o status delas.\n<br><br>\n**Por quanto tempo que as entregas estão disponíveis para consulta?**\n<br>\nEntregas em aberto sempre estão disponiveis para consulta. Entregas finalizadas estão disponíveis em um range de 7 dias \n(3 dias antes da data atual e 3 dias após a data atual) da data de agendamento da entrega. Por exemplo: uma entrega finalizada e que havia sido agendada para o \ndia 13/02/2025 só poderá ser consultada no endpoint até o dia 16/02/2025.\n<br>\nO payload de resposta retorna o motivo de Não Finalizado na sua forma de código. \nO código segue os Motivos de Status Não Finalizado que podem ser obtidos no endpoint /unfinishedStatusReasons que hoje está publico na documentação.",
        "parameters": [
          {
            "$ref": "#/components/parameters/live_mode"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "tracking_codes"
                ],
                "properties": {
                  "tracking_codes": {
                    "description": "Array de identificadores de entregas",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "051aa70b607f97beeba3f5f9ee2a6b984a9f1489c3a74d6083afc59e1685cb2a"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Consulta realizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "description": "Código de status da resposta. 1 = Sucesso",
                      "type": "integer",
                      "example": 1
                    },
                    "message": {
                      "description": "Mensagem de retorno da requisição",
                      "type": "string",
                      "example": "Requisição realizada com sucesso."
                    },
                    "found": {
                      "description": "Trackings encontrados",
                      "type": "object",
                      "properties": {
                        "orderTracking": {
                          "description": "Identificador da entrega",
                          "type": "string",
                          "example": "051aa70b607f97beeba3f5f9ee2a6b984a9f1489c3a74d6083afc59e1685cb2a"
                        },
                        "orderId": {
                          "description": "Número da entrega na operação",
                          "type": "string",
                          "example": "1"
                        },
                        "status": {
                          "description": "Status da entrega",
                          "type": "string",
                          "example": "Não Finalizado"
                        },
                        "updatedAt": {
                          "description": "Data de atualização da entrega",
                          "type": "string",
                          "example": "2025-01-28 16:37:43"
                        },
                        "reason": {
                          "description": "Código do motivo de Não Finalização da entrega",
                          "type": "integer",
                          "example": 5
                        },
                        "fleet": {
                          "description": "Informações do entregador",
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "Identificador do entregador",
                              "type": "integer",
                              "example": 2033
                            },
                            "name": {
                              "description": "Nome do entregador",
                              "type": "string",
                              "example": "Matheus Costa K."
                            }
                          }
                        },
                        "status_history": {
                          "description": "Histórico de status da entrega",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Status da entrega",
                                "type": "string",
                                "example": "Em Aberto"
                              },
                              "timestamp": {
                                "description": "Data de atualização do status da entrega",
                                "type": "string",
                                "example": "2025-01-27 13:11:45"
                              },
                              "latitude": {
                                "description": "Coordenada de latitude da alteração de status da entrega",
                                "type": "number",
                                "example": 123.123123
                              },
                              "longitude": {
                                "description": "Coordenada de longitude da alteração de status da entrega",
                                "type": "number",
                                "example": 123.123123
                              },
                              "attachments": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "photo",
                                      "description": "Tipo de anexo. photo = Foto, signature = Assinatura"
                                    },
                                    "fileUrl": {
                                      "description": "URL do anexo",
                                      "type": "string",
                                      "example": "https://example.s3.sa-east-1.amazonaws.com/example.jpg"
                                    },
                                    "notFound": {
                                      "description": "Trackings não encontrados",
                                      "type": "array",
                                      "items": {
                                        "description": "Identificador da entrega não encontrado",
                                        "type": "string",
                                        "example": "051aa70b607f97beeba3f5f9ee2a6b984a9f1489c3a74d6083afc59e1685cb2a"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro na consulta",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Código de status da resposta",
                        "type": "integer",
                        "example": 0
                      },
                      "message": {
                        "description": "Mensagem de retorno do erro",
                        "type": "string",
                        "example": "O campo 'tracking_codes' não foi informado"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "405": {
            "$ref": "#/components/responses/405"
          },
          "429": {
            "description": "Limite de requisições atingido"
          }
        },
        "security": [
          {
            "TokenHeader": []
          }
        ]
      }
    }
  },
  "webhooks": {
    "/event": {
      "post": {
        "operationId": "events",
        "tags": [
          "Webhooks"
        ],
        "summary": "Eventos de notificação",
        "description": "Trabalhamos com webhooks para notificações de eventos do sistema Husky. Para receber as notificações, é necessário cadastrar a URL de destino e o tipo de evento que será notificado.\n\n**Eventos disponíveis e o momento em que o evento será notificado:**\n**Eventos de Entrega:**\n> `ORDER_CREATED`: Quando uma nova entrega é criada\\\n> `ORDER_UPDATED`: Quando a entrega é atualizada\\\n> `ORDER_STATUS_UPDATED`: Quando o status da entrega é atualizado (ex: coletando, entregando, etc)\\\n> `ORDER_DRIVER_UPDATED`: Quando alterado o entregador da entrega\\\n**Eventos de Entregador:**\n> `FLEET_QUEUE`: Quando o entregador sai da fila do embarcador\\\n> `DRIVER_CREATED`: Quando um novo entregador é criado\\\n> `DRIVER_UPDATED`: Quando alterado os dados do entregador\\\n> `DRIVER_STATUS_UPDATED`: Quando alterado o status do entregador\\\n**Eventos de Embarcador:**\n> `CLIENT_CREATED`: Quando um novo embarcador é criado\\\n> `CLIENT_UPDATED`: Quando alterado os dados do embarcador\\\n> `CLIENT_STATUS_UPDATED`: Quando alterado o status do embarcador",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookEvent"
              }
            }
          }
        }
      }
    }
  }
}